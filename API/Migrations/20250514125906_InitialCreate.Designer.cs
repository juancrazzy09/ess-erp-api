// <auto-generated />
using System;
using API.Uitilities.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20250514125906_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Models.BarangayTable", b =>
                {
                    b.Property<long>("BrgyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BrgyId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrgyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MunicipalityId")
                        .HasColumnType("bigint");

                    b.HasKey("BrgyId");

                    b.ToTable("BarangayTable");
                });

            modelBuilder.Entity("API.Models.CampusTable", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampusId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CampusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("CampusId");

                    b.ToTable("CampusTable");
                });

            modelBuilder.Entity("API.Models.DivisionTable", b =>
                {
                    b.Property<int>("DivId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DivId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DivName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DivId");

                    b.ToTable("DivisionTable");
                });

            modelBuilder.Entity("API.Models.EducBGTable", b =>
                {
                    b.Property<int>("EducBgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducBgId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducBgName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EducBgId");

                    b.ToTable("EducBGTable");
                });

            modelBuilder.Entity("API.Models.FathersTable", b =>
                {
                    b.Property<long>("FatherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FatherId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Course")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EducationalLevelId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployersAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LifeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobilePhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Monthlyincome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("NationalityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReligionId")
                        .HasColumnType("bigint");

                    b.Property<string>("SchoolGraduated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<string>("WorkPhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isAlumnae")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FatherId");

                    b.ToTable("FathersTable");
                });

            modelBuilder.Entity("API.Models.GuardianTable", b =>
                {
                    b.Property<long>("GuardianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("GuardianId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BrgyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeStreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MunicipalityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<string>("RelationShip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<string>("isVerified")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuardianId");

                    b.ToTable("GuardianTable");
                });

            modelBuilder.Entity("API.Models.LevelTable", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DivId")
                        .HasColumnType("int");

                    b.Property<string>("LevelName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LevelId");

                    b.ToTable("LevelTable");
                });

            modelBuilder.Entity("API.Models.MothersTable", b =>
                {
                    b.Property<long>("MotherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MotherId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Course")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EducationalLevelId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployersAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LifeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobilePhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Monthlyincome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("NationalityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReligionId")
                        .HasColumnType("bigint");

                    b.Property<string>("SchoolGraduated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<string>("WorkPhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isAlumnae")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MotherId");

                    b.ToTable("MothersTable");
                });

            modelBuilder.Entity("API.Models.MunicipalityTable", b =>
                {
                    b.Property<long>("MunicipalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MunicipalityId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("MunicipalityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProvinceId")
                        .HasColumnType("bigint");

                    b.HasKey("MunicipalityId");

                    b.ToTable("MunicipalityTable");
                });

            modelBuilder.Entity("API.Models.NationalityTable", b =>
                {
                    b.Property<int>("NationalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalityId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("NationalityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NationalityId");

                    b.ToTable("NationalityTable");
                });

            modelBuilder.Entity("API.Models.ProvincesTable", b =>
                {
                    b.Property<long>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProvinceId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvinceId");

                    b.ToTable("ProvincesTable");
                });

            modelBuilder.Entity("API.Models.ReligionTable", b =>
                {
                    b.Property<long>("ReligionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ReligionId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReligionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReligionId");

                    b.ToTable("ReligionTable");
                });

            modelBuilder.Entity("API.Models.StrandTable", b =>
                {
                    b.Property<int>("StrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StrandId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("StrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StrandId");

                    b.ToTable("StrandTable");
                });

            modelBuilder.Entity("API.Models.StudentAppFilesTable", b =>
                {
                    b.Property<long>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FileId"));

                    b.Property<string>("CurrentReportCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("GoodMoral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentBaptismal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentBirthCert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentPic2x2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FileId");

                    b.ToTable("StudentAppFilesTable");
                });

            modelBuilder.Entity("API.Models.StudentAppTable", b =>
                {
                    b.Property<long>("AppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AppId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("AppId");

                    b.ToTable("StudentAppTable");
                });

            modelBuilder.Entity("API.Models.StudentDocsTable", b =>
                {
                    b.Property<long>("DocsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DocsId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ECD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ECDSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Form137")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Form137Submitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("GoodMoral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GoodMoralSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradeNineRepCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GradeNineRepCardSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradeTenCert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GradeTenCertSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("LatestReportCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LatestReportCardSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("NCAE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NCAESubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("PSA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PSASubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PassPortSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("QVACert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("QVACertSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("QVR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("QVRSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("SSP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SSPSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<long?>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<string>("TwoByTwoPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TwoByTwoPhotoSubmitted")
                        .HasColumnType("datetime2");

                    b.HasKey("DocsId");

                    b.ToTable("StudentDocstable");
                });

            modelBuilder.Entity("API.Models.StudentTable", b =>
                {
                    b.Property<long>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StudentId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CampusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<long?>("ReligionId")
                        .HasColumnType("bigint");

                    b.Property<int?>("StrandId")
                        .HasColumnType("int");

                    b.Property<string>("StudentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("StudentTable");
                });

            modelBuilder.Entity("API.Models.UserTable", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"));

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UsersTable");
                });
#pragma warning restore 612, 618
        }
    }
}
